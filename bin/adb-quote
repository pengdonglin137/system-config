#!/bin/bash

if test "$#" = 1; then
    set -- sh -c "$1"
fi

args=()

for x in "$@"; do
    args=(
        "${args[@]}"
        "$(printf %q "$x")"
    )
done

set -- "${args[@]}"

# global options:
#  -a         listen on all network interfaces, not just localhost
#  -d         use USB device (error if multiple devices connected)
#  -e         use TCP/IP device (error if multiple TCP/IP devices available)
#  -s SERIAL
#      use device with given serial number (overrides $ANDROID_SERIAL)
#  -p PRODUCT
#      name or path ('angler'/'out/target/product/angler');
#      default $ANDROID_PRODUCT_OUT
#  -H         name of adb server host [default=localhost]
#  -P         port of adb server [default=5037]
#  -L SOCKET  listen on given socket for adb server [default=tcp:localhost:5037]

set -e
## start code-generator "^\\s *#\\s *"
# generate-getopt -P s:serial
## end code-generator
## start generated code
TEMP=$(POSIXLY_CORRECT=true getopt -o s:h \
                      --long serial:,help \
                      -n $(basename -- $0) -- "$@")
declare serial=
eval set -- "$TEMP"
while true; do
    case "$1" in

        -s|--serial)
            serial=$2
            shift 2

            ;;
        -h|--help)
            set +x
            echo -e
            echo
            echo Options and arguments:
            printf %06s '-s, '
            printf %-24s '--serial=SERIAL'
            echo
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code


if test "$1" != shell; then
    set -- shell "$@"
fi

if test "${serial}"; then
    set -- -s "${serial}" "$@"
fi

adb "$@"

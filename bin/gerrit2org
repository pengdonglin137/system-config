#!/usr/bin/env perl

use strict;

sub debug(@) {
    print STDERR "@_\n";
}

if (system("is-at-work") != 0) {
    exit 0;
}

open(my $gerrit_pipe, "-|", "gerrit -h s query owner:baohaojun is:open; gerrit -h s query reviewer:baohaojun is:open --comments")
    or die "Can't open gerrit pipe";

my $gerrit_org;
my $new_review = 0;

my ($gerrit_id, $gerrit_url, $gerrit_subject, %gerrit_map, %gerrit_id_map, %gerrit_seen_commenter, %gerrit_last_commenter);
while (<$gerrit_pipe>) {
    chomp;
    if (s/^\s*subject:\s*//) {
        $gerrit_subject = $_;
        next;
    }

    if (s/^\s*id:\s*//) {
        $gerrit_id = $_;
        next;
    }

    if (s/^\s*url:\s*//) {
        $gerrit_url = $_;
        $gerrit_map{$gerrit_url} = $gerrit_subject;
        $gerrit_id_map{$gerrit_url} = $gerrit_id;
        $gerrit_seen_commenter{$gerrit_url} = 0;
        next;
    }

    if (m/^\s*comments:/) {
        $gerrit_seen_commenter{$gerrit_url} = 1;
    }

    if ($gerrit_seen_commenter{$gerrit_url} and s/^\s*name:\s*//) {
        $gerrit_last_commenter{$gerrit_url} = $_;
    }
}

for $gerrit_url (sort keys %gerrit_map) {

    $gerrit_subject = $gerrit_map{$gerrit_url};
    $gerrit_id = $gerrit_id_map{$gerrit_url};

    if (system("gerrit2org-done", "-g", $gerrit_url, $gerrit_id) == 0) {
        print STDERR "$gerrit_url last reviewer is baohaojun, continue\n";
        next;
    }

    if (not $gerrit_org) {
        open($gerrit_org, ">>", glob("~/src/github/projects/gerrit.org"))
            or die "Can't open gerrit org";
    }

    if (system("gerrit2org-done", "-s", $gerrit_url) != 0) {
        system("bhj-notify", "gerrit2org", "Faled to add $gerrit_url");
        die "Failed to mark $gerrit_url as added";
    }

    $new_review = 1;

    print $gerrit_org <<EOF;
* TODO [#A] $gerrit_subject                :$gerrit_id:
  :PROPERTIES:
  :FROM:     $gerrit_url
  :ID:       $gerrit_id
  :END:

EOF

    }

close $gerrit_org if $gerrit_org;

if ($new_review) {
  system("bhj-notify gerrit \"You've have got gerrit review requests\"");
}

#!/bin/bash

set -e

unset CLASSPATH
unset PROMPT_RET

if test "$SC_DEBUG" = true; then
    set -x
fi
cd $(lookup-file .repo/..)

if test -d out -a ! -L out; then
    if test -e ~/src/github/smartcm/scm-helpers/.check-out-is-real-dir; then
        . ~/src/github/smartcm/scm-helpers/.check-out-is-real-dir || true
    fi
fi

# 任何情况下都要删掉 out，主要有这 3 种情况：
# 1. out 是一个真实的目录，我们的脚本里不会使用真实目录，必须把它整个删除

# 2. out 是一个合法的软链接（指向的目录真实存在），这种情况下因为我们
# 没有加“/”，所以不会删除真正的目录下的文件

# （也就是说，千万不能写成“rm -rf out/”！）

# 3. out 是一个非法的软链接（指向的目录已经被删除）
rm -rf out

(
    # make sure android lunch script will not run mkdir out.
    mkdir -p .repo/out.tmp
    ln -s .repo/out.tmp out
)

declare -A before_env
declare -A after_env

function parse-env() {
    local declare
    local x
    local env_val
    local env
    local val

    while read declare x env_val; do
        if test "$declare" != declare -o "$x" != -x; then
            continue
        fi
        env=${env_val%%=*}
        eval val=\$$env
        eval "$1[$env]=$(printf %q "$val")"
    done <<<"$(declare -xp)"
}

parse-env before_env

lunch-without-buildspec() {

    if test -e buildspec.mk; then
        # 有这个文件在的时候，lunch 是不能正常工作的。这是因为后来我改
        # 了一下 buildspec.mk，没有继续使用 Makefile 的 ?= 来写
        # TARGET_PRODUCT 等变量，而是直接使用了 :=

        # 另外，不能随便删除这个文件，万一设置并没有变化，重新生成一遍
        # 这个文件的话，会导致安卓重新生成一遍 ninja，那速度就慢多了

        mv buildspec.mk buildspec.mk.bak.$$
    fi

    lunch "$1"

    if test -e buildspec.mk.bak.$$; then
        mv buildspec.mk.bak.$$ buildspec.mk
    fi
}

if test $# != 0; then
    if test "$1" != "${TARGET_PRODUCT}"-"${TARGET_BUILD_VARIANT}"; then
        . build/envsetup.sh
        lunch-without-buildspec "$1"
    fi
else
    . build/envsetup.sh >/dev/null 2>&1
    products=$(for x in "${LUNCH_MENU_CHOICES[@]}"; do echo ${x%-*}; done)
    product=$(select-args -p "请选择你要编译的产品" -o -- ${products[@]})
    variant=$(select-args -p "请选择你要编译的选项" -o -- userdebug user eng )
    config=$product-$variant
    lunch-without-buildspec "$config"
fi

parse-env after_env

ccache -M 100G

. ~/system-config/bin/.android-set-outdir

declare -xp > .buildspec.sc
(
    env_vars=(
        TARGET_BUILD_APPS TARGET_BUILD_TYPE OUT_DIR
        TARGET_BUILD_VARIANT TARGET_PRODUCT TARGET_SIMULATOR
        TARGET_PRODUCT_SMARTISAN_EXTRA_ENV
        ANDROID_BUILD_TOP
    )
    for x in "${env_vars[@]}"; do
        if test "${after_env[$x]}"; then
            echo "export $x := ${after_env[$x]}"
        fi
    done
    echo 'export KERNEL_HELPER_BHJ:=yes' >> buildspec.mk.$$
) > buildspec.mk.$$


if diff buildspec.mk.$$ buildspec.mk -q >/dev/null 2>&1; then
    rm buildspec.mk.$$
else
    mv buildspec.mk.$$ buildspec.mk
fi

reset-env

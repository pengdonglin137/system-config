#!/bin/bash
set -e

## start code-generator "^\\s *#\\s *"
# generate-getopts d:dataDir
## end code-generator
## start generated code
dataDir=
OPTIND=1
while getopts 'd:' opt; do
    case "$opt" in
        d)    dataDir=$OPTARG;;
        *)    echo Usage Error;;
    esac
done
shift $(($OPTIND - 1))

## end generated code

if test -z "$ANDROID_SERIAL"; then
    die "Must set ANDROID_SERIAL"
elif test "$ANDROID_SERIAL" = "$(get-about-me adb-serial)"; then
    echo "It's dangerous to restore data to your daily use phone."
    read -p 'Please type these words: "Yes, I mean it": '
    if test "$REPLY" != "Yes, I mean it"; then
        die "Must confirm by typing the correct words"
    fi
fi


if test -z "$dataDir"; then
    serial=$(my-adb cat /proc/cmdline|perl -npe 's/.*serialno=(\S+).*/$1/')
    if test -z "$serial"; then
        die "serial not found"
    fi
    export dataDir=~/today/forever/data-$serial
    export systemDir=~/today/forever/system-$serial
fi

ssh-to-phone echo shit
mkdir -p $dataDir
. ~/system-config/.bashrc-linux-bash
hint "等一下你会用到 sudo 命令，可能需要输入 sudo 密码"

sudo bash -c "mkdir -p ~root/.ssh; cp ~$USER/.ssh/* ~root/.ssh" || true

if test $(basename $0) = adb-backup-system; then
    mkdir -p $systemDir
    cd $systemDir
    sudo-x rsync root@phone:/android/system  . -avzc --delete --exclude .git
elif test $(basename $0) = adb-backup-data; then
    cd $dataDir
    my-adb "ls -R -Z /data/debian/android/data/ > /data/chcon.txt" || true
    sudo-x rsync root@phone:/android/data  . -avzc --exclude-from ~/system-config/etc/adb-sync-data-exclude --delete --delete-excluded
elif test $(basename $0) = adb-backup-data-no-sdcard; then
    cd $dataDir
    my-adb "ls -R -Z /data/debian/android/data/ > /data/chcon.txt" || true
    sudo-x rsync root@phone:/android/data  . -avzc --exclude-from ~/system-config/etc/adb-sync-data-exclude --delete --exclude data/media --exclude data/debian
elif test $(basename $0) = adb-restore-data; then
    cd $dataDir
     adb-fix-gms
     sudo-x rsync data root@phone:/android/ -avc "$@" --delete
elif test $(basename $0) = adb-restore-data-no-sdcard; then
    cd $dataDir
    generate-chcon.pl data/chcon.txt > data/chcon.sh
    adb push data/chcon.sh /data
    my-adb bash -x /data/chcon.sh
    adb-stop-all-services
    adb-fix-gms
    sudo-x rsync data root@phone:/android/ -avc "$@" --delete --exclude='data/media/*' --exclude='data/debian*'
    my-adb bash -x /data/chcon.sh
    my-adb mkdir -p /sdcard/MobileOrg
    for x in $(seq 1 2); do
        my-adb mount|grep debian|pn 3|xargs my-adb umount -l || true
    done
    my-adb restorecon -D -R -v -F /data || true
elif test $(basename $0) = adb-backup-su; then
    gapp_dir=~/.local-config/bin/gapps-system
    lib_dir=lib
    if [[ $(my-adb getprop ro.build.version.release) =~ ^5 ]]; then
        gapp_dir=~/src/github/gapps-lp/system
        lib_dir=lib64
    fi
    (
        cd $gapp_dir
        (
            cd xbin
            adb-pull /system/xbin/su /system/xbin/daemonsu /system/xbin/supolicy .
            adb-pull /system/xbin/sugote /system/xbin/sugote-mksh /system/xbin/.tmpsu .
            chmod +x *
        )
        (
            cd etc
            adb-pull /etc/install-recovery.sh .
        )
        (
            cd $lib_dir
            adb-pull /system/$lib_dir/libsupol.so .
        )

        (
            cd app
            adb-pull /system/app/Superuser .
            adb-pull /system/app/Superuser.apk .
        )
    )
elif test $(basename $0) = adb-restore-system; then
    cd ~/today/forever/system-f9e6c95
    sudo-x rsync system root@phone:/android/ -avc "$@"
fi

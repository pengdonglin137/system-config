#!/bin/bash

set -e

# This script will actually start a literate programming

if test -z "$1"; then
    if is-in-emacs; then
        nohup setsid out-of-emacs knuth-mode >/dev/null 2>&1&
        exit
    fi
    target=$(emacs-current-file)
else
    target=$(readlink -f "$1")
fi

if [[ "$target" =~ \.org$ ]]; then
    org_target=$target
    target=$(perl -ne 'print $1 if m/:tangle (\S+) /' "$target")
    target=${target/#\~/$HOME}
    if ! [[ $target =~ ^/ ]]; then
        target=$(
            cd $(dirname "$org_target")
            readlink -m $target
              )
    fi
    e $target
    exit
fi

org_target=$(
    if [[ $target =~ /smartcm/ ]]; then
        knuth_repo=~/src/github/smartcm
    elif [[ $target =~ /private-config/ ]]; then
        knuth_repo=~/.local-config/
    else
        knuth_repo=~/system-config
    fi
    org_target=$(expand-file-name "$(perl -ne 'print $1 if m,\[\[file:(.*?)::,' $target)")
    if test -e "$org_target"; then
        echo "$org_target"
    else
        echo $knuth_repo/knuth-mode/$(basename $target).org
    fi
          )
if test -e "$org_target"; then
    e $org_target
    die "Can't do knuth-mode when $org_target exists"
fi

mkdir -p ~/.local-config/knuth-mode
cat <<EOF > $org_target
** 最终的版本：

#+name: read-only
#+BEGIN_SRC sh
# Local Variables: #
# eval: (read-only-mode 1) #
# End: #
#+END_SRC

#+name: old-code
#+BEGIN_SRC sh
$(cat $target|perl -npe 's/^/  /')
#+END_SRC

#+name: the-ultimate-script
#+BEGIN_SRC sh :tangle $(echo ${target} | perl -npe 's,^$ENV{HOME}/,~/,') :comments link :shebang "#!/bin/bash" :noweb yes
set -e

<<old-code>>
<<read-only>>
#+END_SRC

#+results: the-ultimate-script

EOF

e $org_target

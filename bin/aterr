#!/bin/bash

set -e
set -o errtrace
if test "$#" = 0; then
    trap - ERR
    return
fi

function setup-aterr() {
    ## start code-generator "^\\s *#\\s *"
    # generate-getopt -P i:ignored-errno=0
    ## end code-generator
    ## start generated code
    TEMP=$(POSIXLY_CORRECT=true getopt -o i:h \
                          --long ignored-errno:,help \
                          -n $(basename -- $0) -- "$@")
    declare ignored_errno=0
    eval set -- "$TEMP"
    while true; do
        case "$1" in

            -i|--ignored-errno)
                ignored_errno=$2
                shift 2

                ;;
            -h|--help)
                set +x
                echo -e
                echo
                echo Options and arguments:
                printf %06s '-i, '
                printf %-24s '--ignored-errno=IGNORED_ERRNO'
                echo
                exit
                shift
                ;;
            --)
                shift
                break
                ;;
            *)
                die "internal error: $(. bt; echo; bt | indent-stdin)"
                ;;
        esac
    done


    ## end generated code


    aterr_args=(
        "$@"
    )

    export aterr_ignored_errno=$ignored_errno
    function aterr() {
        local aterr_ret=$?
        if test "$aterr_ret" != 0 -a "$aterr_ret" != "$aterr_ignored_errno"; then
            ("${aterr_args[@]}") # so that we don't change aterr_ret
        fi
        return $aterr_ret
    }

    trap aterr ERR
}

setup-aterr "$@"

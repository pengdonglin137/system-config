#!/bin/bash

set -e

me=$(readlink -f $0)
if test ! -e "$me"; then
    me=$(readlink -f "$(which $0)")
    if test ! -e "$me"; then
        die "Can't find out about me"
        exit 1
    fi
fi
b0=$(basename $0)

declare -a subject
declare -a body
declare -a attachments
declare -a to
declare -a cc
declare -a bcc

IFS=$'\n'

function die() {
    echo Error: "$@"
    echo
    Usage 1
}

prog_name="`basename \"$0\"`"

function check_arg()
{
    if [[ -z "$1" ]]
    then
        Usage 1;
    fi
}

function Usage()
{
    echo "Usage: $prog_name [recipient]... OPTIONS"
    echo
    echo "Main Options:"
    echo "    -h:                 this little help"
    echo "    -t recipient:       mail to somebody"
    echo "    -c cc_recipient:    cc to somebody"
    echo "    -b bcc_recipient:   bcc to somebody"
    echo "    -s subject:         subject"
    echo "    -a file:            attachments"
    echo "    -m message:         the mail text"
    exit "$@"
}
rec_type=to
send_as=$(get-about-me send-as)
if test "$send_as" = unknown; then
    send_as=
else
    send_as="-r $send_as"
fi

while true; do
    case "$1" in
        [^-]*)
            eval $rec_type='("${'$rec_type'[@]}" "$1")'
            shift
            ;;
        -h)
            Usage
            shift
            ;;
        -r)
            check_arg "$2"
            send_as="-r $2"
            shift 2
            ;;
        -s)
            check_arg "$2"
            subject=("$2")
            shift
            shift
            ;;
        -t)
            check_arg "$2"
            rec_type=to
            shift
            ;;
        -c)
            check_arg "$2"
            rec_type=cc
            shift
            ;;
        -b)
            check_arg "$2"
            rec_type=bcc
            shift
            ;;
        -m)
            check_arg "$2"
            body=$2
            shift 2
            ;;
        -a)
            check_arg "$2"
            attachments=("${attachments[@]}" "$(wlp "$2")")
            shift 2
            ;;
        -*)
            die unknown option $1
            ;;
        *)
            break
            ;;
    esac
done

if test -z "$body" -a $(basename $0) = mailx; then
    if tty >/dev/null 2>&1; then
        body=("$(get-stdin -p "input the mail body")")
    else
        body=("$(cat)")
    fi
fi

test -z "${body[0]}" && body=("=")

the_mailx=/usr/bin/heirloom-mailx
if test -e /opt/local/bin/mailx; then
    the_mailx=/opt/local/bin/mailx;
fi

if test $(basename $0) = gnus-mailx; then
cat <<EOF > /tmp/mail.txt.$$
From: $(cat ~/.config/system-config/about_me/FullName) <$(cat ~/.config/system-config/about_me/mail)>
$(
## start code-generator "^\\s *#"
# for x in cc bcc subject to; do
#     echo if test \"\$"$x"\" -o $x = to -o $x = subject\; then
#     echo '    echo' \"$(ucfirst $x): \"'${'$x'[@]}'
#     echo fi
# done
## end code-generator
## start generated code
if test "$cc" -o cc = to -o cc = subject; then
    echo "Cc: "${cc[@]}
fi
if test "$bcc" -o bcc = to -o bcc = subject; then
    echo "Bcc: "${bcc[@]}
fi
if test "$subject" -o subject = to -o subject = subject; then
    echo "Subject: "${subject[@]}
fi
if test "$to" -o to = to -o to = subject; then
    echo "To: "${to[@]}
fi

## end generated code
)
Gcc: nnmaildir+Gmail:SentMails
--text follows this line--
$(echo "$body")

--
All the best

 Bao Haojun

$(
    if test "$attachments"; then
        for x in "${attachments[@]}"; do
            echo '<#part type="'$(xdg-mime query filetype "$x")'" filename="'"$x"'" disposition=attachment>'
            echo '<#/part>'
        done
    fi
)
EOF

    emacs.client -d -e "
(progn
  (require 'gnus)
  (gnus)
  (gnus-summary-mail-other-window)
  (delete-region (point-min) (point-max))
  (insert-file \"/tmp/mail.txt.$$\")
  (message-goto-body))"

elif test $(basename $0) = adb-mail -o $(basename $0) = adb-gmail; then
    gmail=false;
    if test $(basename $0) = adb-gmail; then
        gmail=true;
    fi
    adb-ignite-device


    if test $gmail = true; then
        my-adb am start -n com.google.android.gm/com.google.android.gm.ComposeActivityGmail
    else
        my-adb am start -n com.android.email/com.android.email.activity.ComposeActivityEmail
    fi
    sleep 1

    if test $gmail = true; then
        adb-tap 932 472
    else
        adb-tap 842 434
    fi


    if test "$attachments"; then
        my-adb mkdir -p /sdcard/adb-mail
        for a in "${attachments[@]}"; do
            if test $gmail = true; then
                adb-tap 730 167
                adb-tap 612 168
            else
                adb-tap 993 883
            fi
            adb-tap 153 1455
            am=/sdcard/adb-mail/$(basename "$a")
            my-adb push "$a" "$am"
            putclip-android ../../../../../../"${am}"
            adb-key SCROLL_LOCK
            adb-tap 965 1061
            sleep 1
        done
    fi

    function add_contacts() {
        contacts=$(
            for x in "$@"; do
                echo -n "$x" | perl -npe 's/.*<(.*)>.*/$1/'; echo -n ","
            done)
        putclip-android "$contacts"
        adb-key SCROLL_LOCK
    }

    if test $gmail = true; then
        adb-tap 321 524
    else
        adb-tap 247 287
    fi
    if test "$to"; then
        add_contacts "${to[@]}"
    fi

    adb-key DPAD_DOWN
    if test "$cc"; then
        add_contacts "${cc[@]}"
    fi

    adb-key DPAD_DOWN
    if test "$bcc"; then
        add_contacts "${bcc[@]}"
    fi

    adb-key DPAD_DOWN
    if test "$subject"; then
        putclip-android "$subject"
        adb-key SCROLL_LOCK
    fi
    adb-key DPAD_DOWN

    if test $gmail = false; then
        adb-key DPAD_UP
        adb-key DPAD_UP
    fi

    find-or-exec T1Wrench T1Wrench

elif test $b0 = mailx; then
    scheme=$(
        if test $(get-about-me conn-type) = ssl; then
            echo smtps://
        fi
          )
    STARTTLS=
    if test $(get-about-me conn-type) = starttls; then
        STARTTLS="-S smtp-use-starttls=on"
    fi

    if test "$(get-about-me smtp)" = localhost; then
        auth=N/A
    else
        auth=$(get-authinfo $(get-about-me smtp) $(get-about-me mail))
    fi

    (
        if test -e /etc/postfix/sasl_passwd; then
            printf "$the_mailx -S from=$(get-about-me mail) -S smtp=localhost:25 "
        else
            printf "$the_mailx $send_as -Ssmtp-auth=login -S from=$(get-about-me mail) $STARTTLS -S smtp=$scheme$(get-about-me smtp):$(get-about-me smtp-port) -S smtp-auth-user=$(get-about-me mail) -S smtp-auth-password=%q " "$auth"
        fi
     for y in attachments cc bcc subject to; do
         eval '
                    if test ${#'$y'[@]} != 0; then
                        for x in $(seq 1 "${#'$y'[@]}"); do
                            if test '$y' = to; then
                                printf -- " ";
                            else
                                printf -- \ -'${y:0:1}'\ \

                            fi
                            if [[ '$y' =~ cc|bcc|to ]]; then
                                printf -- "%q" "$( echo -n "${'$y'[$x-1]}" |perl -npe "s/.*<(.*)>.*/\$1/")"
                            else
                                printf -- "%q" "${'$y'[$x-1]}"
                            fi
                        done
                    fi'
     done
     printf " << '31a1b9affa4ee4c6520ac20bb7c16f69'\n"
     echo "$body"
     echo "31a1b9affa4ee4c6520ac20bb7c16f69"
    ) | bash $(if test "$DEBUG" = true; then echo -x; fi)
fi

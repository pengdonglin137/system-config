#!/bin/bash
if echo $SHELLOPTS | grep -q xtrace; then
    xdebug=-x
else
    xdebug=
fi


if id | grep 'uid=0\b' -P; then
    screen_pid=$SCREEN_PID

    uid=$(id ${OLDUSER:-bhj} | perl -npe 's,^uid=(\d+).*,$1,')
    if ! [[ $uid =~ ^[0-9]+$ ]]; then
        echo "Can't determine your uid: $uid"
        exit 1
    fi
    ps -eo uid,pid | grep "^\s*$uid\s+" -P | pn 2 |
        while read pid; do
            if test "$pid" = "$screen_pid"; then
                continue
            fi

            if is-ppid "$screen_pid" "$pid"; then
                continue
            fi

            if test "$pid" = "$MY_PPID"; then
                continue
            fi

            if is-ppid "$MY_PPID" "$pid"; then
                continue
            fi

            if test "$WAIT" = true; then
                ps "$pid"
                sleep 3
            fi

            kill "$pid"
            (
                sleep 3
                kill -9 "$pid"
            ) >/dev/null 2>&1&
        done
    /etc/init.d/dbus restart || true
else
    ## start code-generator "^\\s *#\\s *"
    # generate-getopt wwait
    ## end code-generator
    ## start generated code
    TEMP=$(getopt -o wh \
                  --long wait,help,no-wait \
                  -n $(basename -- $0) -- "$@")
    wait=false
    eval set -- "$TEMP"
    while true; do
        case "$1" in

            -w|--wait|--no-wait)
                if test "$1" = --no-wait; then
                    wait=false
                else
                    wait=true
                fi
                shift
                ;;
            -h|--help)
                set +x
                echo
                echo
                echo Options and arguments:
                printf %06s '-w, '
                printf %-24s '--[no-]wait'
                echo
                exit
                shift
                ;;
            --)
                shift
                break
                ;;
            *)
                die "internal error: $(. bt; echo; bt | indent-stdin)"
                ;;
        esac
    done


    ## end generated code

    MY_PPID=$(ps -o ppid -h $$|perl -npe 's/\s//g')
    screen_pid=$(ps.pl SCREEN.first|grep SCREEN|pn 1)
    if test "$SC_USE_TMUX" = true; then
        screen_pid=$(ps.pl tmux.first.new.session|grep '^\s*\d+\s+1\s+' -P|pn 1)
    fi

    sudo setsid env SCREEN_PID=$screen_pid PATH=$PATH OLDUSER=${1:-$USER} WAIT=$wait MY_PPID=$MY_PPID bash $xdebug $0
fi

#!/bin/bash
set -e


## start code-generator "^\\s *#\\s *"
# generate-getopt rrecursive
## end code-generator
## start generated code
TEMP=$( getopt -o rh \
               --long recursive,help,no-recursive \
               -n $(basename -- $0) -- "$@")
declare recursive=false
eval set -- "$TEMP"
while true; do
    case "$1" in

        -r|--recursive|--no-recursive)
            if test "$1" = --no-recursive; then
                recursive=false
            else
                recursive=true
            fi
            shift

            ;;
        -h|--help)
            set +x
            echo -e
            echo
            echo Options and arguments:
            printf %06s '-r, '
            printf %-24s '--[no-]recursive'
            echo
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code

if test $# = 0; then
    set -- s:All-Projects
fi

if test $# != 0; then
    mkdir -p ~/tmp/$1
    cd ~/tmp/$1
    git init .
    git remote add  origin "$1" >/dev/null 2>&1 || true
    git config remote.origin.fetch '+refs/meta/config:refs/meta/config'
    git config remote.origin.push HEAD:refs/meta/config
fi

git fetch $(repo-remote) refs/meta/*:refs/meta/*
git checkout refs/meta/config || git reset --soft refs/meta/config
start_recursive_shell update-meta

if test "${recursive}" = true; then
    if test "$1" = s:All-Projects; then
        exit
    else
        parent_project=$(git config -f project.config access.inheritFrom)
        if test "${parent_project}"; then
            gerrit-update-meta --recursive s:${parent_project}
        fi
    fi
fi
